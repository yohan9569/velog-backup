name: Velog Backup

on:
  schedule:
    - cron: '0 0 * * *'  # 매일 자정에 실행 (원하는 시간대로 수정 가능)
  workflow_dispatch:  # 수동 실행

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3  # v3으로 업데이트

      - name: Set up Node.js
        uses: actions/setup-node@v3  # v3으로 업데이트
        with:
          node-version: '20'  # Node.js 20으로 설정

      - name: Install dependencies
        run: |
          npm install axios xml2js  # xml2js 라이브러리 설치

      - name: Fetch and backup Velog posts
        env:
          VELOG_USERNAME: "yohan9569"
        run: |
          mkdir -p velog-posts
          node -e "
          const fs = require('fs');
          const axios = require('axios');
          const xml2js = require('xml2js');  // xml2js 로드
          
          const username = 'yohan9569';
          const url = 'https://api.velog.io/rss/@' + username;

          axios.get(url)
            .then(response => {
              xml2js.parseString(response.data, (err, result) => {
                if (err) {
                  console.error('Error parsing RSS:', err);
                  return;
                }
                
                const posts = result.rss.channel[0].item;  // RSS 아이템 목록
                posts.forEach(post => {
                  const title = post.title[0];
                  const link = post.link[0];
                  const content = \`# \${title}\n\n\${link}\`;
                  let fileName = title;
                  fileName = fileName.replace(/[\/\\\\]/g, '-');  // 슬래시와 백슬래시를 대시로 대체
                  fileName = fileName.toLowerCase(); // 소문자화
                  const filePath = 'velog-posts/' + fileName + '.md';
                  
                  // 파일이 존재하지 않으면 생성
                  if (!fs.existsSync(filePath)) {
                      fs.writeFileSync(filePath, entry.description, 'utf8');
                      console.log(`Created new file: ${filePath}`);
                  } else {
                      console.log(`File already exists: ${filePath}`);
                  }
                });
              });
            })
            .catch(err => {
              console.error('Error fetching Velog posts:', err);
            });
          "

      - name: Commit and push changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --local user.email "yohan9569@gmail.com"
          git config --local user.name "yohan9569"
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/yohan9569/velog-backup.git
          git add velog-posts/*.md
          git commit -m "Auto backup Velog posts"
          git push
